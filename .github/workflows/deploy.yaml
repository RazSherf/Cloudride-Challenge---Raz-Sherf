name: Deploy Hello World App to ECS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build and Deploy to Amazon ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image..."
          
          # Trim any whitespace/newlines from variables
          ECR_REGISTRY=$(echo "$ECR_REGISTRY" | tr -d '\n\r' | xargs)
          ECR_REPOSITORY=$(echo "$ECR_REPOSITORY" | tr -d '\n\r' | xargs)
          IMAGE_TAG=$(echo "$IMAGE_TAG" | tr -d '\n\r' | xargs)
          
          echo "ECR Registry: $ECR_REGISTRY"
          echo "ECR Repository: $ECR_REPOSITORY"
          echo "Image Tag: $IMAGE_TAG"
          echo "AWS Region: ${{ secrets.AWS_REGION }}"
          
          echo "Checking if ECR repository exists..."
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region ${{ secrets.AWS_REGION }} || echo "Repository check failed"
          
          echo "Available ECR repositories:"
          aws ecr describe-repositories --region ${{ secrets.AWS_REGION }} --query 'repositories[].repositoryName' --output table
          
          FULL_IMAGE_NAME="${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          echo "Full image name: $FULL_IMAGE_NAME"
          
          docker build -t "$FULL_IMAGE_NAME" .
          
          echo "Pushing image to ECR..."
          docker push "$FULL_IMAGE_NAME"

      - name: Fill in the new image ID in the ECS task definition
        id: render-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/task-definition.json
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy to ECS (Update service with new task definition)
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          service: ${{ secrets.ECS_SERVICE_NAME }}
          task-definition: ${{ steps.render-task.outputs.task-definition }}

      - name: Force new deployment to ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}